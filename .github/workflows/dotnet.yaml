name: .NET Build

# Trigger the workflow on push or pull request
on:
  push:
    paths:
      - "**.cs"
      - "**.csproj"
      - "**.axaml"
      - "**.cpp"
      - "**.h"
      - "**.hpp"
      - ".github/workflows/dotnet.yaml"
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Download repo and submodules
      run: | 
        git submodule update --init --recursive
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    - name: Install build dependencies
      run: | 
        sudo apt-get update
        sudo apt-get install -y gcc-multilib g++-multilib mingw-w64
    
    # No need to set up anything else as ubuntu-latest already contains everything we need for a linux-only build
    # In .NET 8 they're gonna make publishing less bad by allowing all projects to be built to one folder without hacks, so improve build scripts then

    - name: Build Release ClientUI
      working-directory: ./ClientUI
      run: dotnet publish -c Release

    - name: Create ClientUI zip
      working-directory: ./ClientUI/bin/Release/
      run: sh -c 'cd ./*/publish && zip -r "${GITHUB_WORKSPACE}/ClientUI.zip" .'
    
    
    # - name: Build Release ClientConsole
    #   working-directory: ./ClientConsole
    #   run: dotnet publish -c Release

    # - name: Create ClientConsole zip
    #   working-directory: ./ClientConsole/bin/Release/
    #   run: sh -c 'cd ./*/publish && zip -r "${GITHUB_WORKSPACE}/ClientConsole.zip" .'

    - name: Add ClientUI artifact
      uses: actions/upload-artifact@v3
      with:
        name: ClientUI
        path: ${{ github.workspace }}/ClientUI.zip
    
    # - name: Add ClientConsole artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: ClientConsole
    #     path: ${{ github.workspace }}/ClientConsole.zip
