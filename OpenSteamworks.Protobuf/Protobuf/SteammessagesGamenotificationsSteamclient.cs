// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: steammessages_gamenotifications.steamclient.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace OpenSteamworks.Protobuf {

  /// <summary>Holder for reflection information generated from steammessages_gamenotifications.steamclient.proto</summary>
  public static partial class SteammessagesGamenotificationsSteamclientReflection {

    #region Descriptor
    /// <summary>File descriptor for steammessages_gamenotifications.steamclient.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SteammessagesGamenotificationsSteamclientReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjFzdGVhbW1lc3NhZ2VzX2dhbWVub3RpZmljYXRpb25zLnN0ZWFtY2xpZW50",
            "LnByb3RvGiBnb29nbGUvcHJvdG9idWYvZGVzY3JpcHRvci5wcm90bxoYc3Rl",
            "YW1tZXNzYWdlc19iYXNlLnByb3RvGixzdGVhbW1lc3NhZ2VzX3VuaWZpZWRf",
            "YmFzZS5zdGVhbWNsaWVudC5wcm90byLgAgobQ0dhbWVOb3RpZmljYXRpb25z",
            "X1ZhcmlhYmxlEqYBCgNrZXkYASABKAlCmAGCtRiTAVRoZSBuYW1lIG9mIHRo",
            "ZSB2YXJpYWJsZSBpbiB0aGUgbG9jYWxpemVkIHRleHQgLS0gYW55d2hlcmUg",
            "dGhhdCAldmFyaWFibGVuYW1lJSBpcyBmb3VuZCB3aXRoaW4gdGhlIHRleHQg",
            "aXQgd2lsbCBiZSBzdWJzdGl0dWRlZCB3aXRoIHRoZSBnaXZlbiB2YWx1ZRKX",
            "AQoFdmFsdWUYAiABKAlChwGCtRiCAVRoZSB2YWx1ZSBvZiB0aGUgdmFyaWFi",
            "bGUgdG8gc3Vic3RpdHV0ZSBpbiB0aGUgbG9jYWxpemVkIHRleHQgaW4gcGxh",
            "Y2Ugb2YgdGhlIGdpdmVuIHZhcmlhYmxlLiAgQ2FuIGl0c2VsZiBiZSBhIGxv",
            "Y2FsaXphdGlvbiB0b2tlbi4ihQMKIENHYW1lTm90aWZpY2F0aW9uc19Mb2Nh",
            "bGl6ZWRUZXh0EkgKBXRva2VuGAEgASgJQjmCtRg1QSBsb2NhbGl6YXRpb24g",
            "dG9rZW4gdGhhdCBtYXBzIHRvIHRoZSBkZXNpcmVkIHN0cmluZy4SjQEKCXZh",
            "cmlhYmxlcxgCIAMoCzIcLkNHYW1lTm90aWZpY2F0aW9uc19WYXJpYWJsZUJc",
            "grUYWEEgbGlzdCBvZiB2YXJpYWJsZXMgdmFsdWVzIHRvIHN1YnN0aXR1dGUg",
            "aW4gYW55IHZhcmlhYmxlcyBmb3VuZCBpbiB0aGUgbG9jYWxpemVkIHN0cmlu",
            "Zy4ShgEKDXJlbmRlcmVkX3RleHQYAyABKAlCb4K1GGtUZXh0IHJlbmRlcmVk",
            "IGluIHRoZSByZXF1ZXN0ZWQgbGFuZ3VhZ2UsIGNvbXBsZXRlIHdpdGggdmFy",
            "aWFibGUgc3Vic3RpdHV0aW9ucywgaWYgYSBsYW5ndWFnZSB3YXMgc3BlY2lm",
            "aWVkLiKVBAodQ0dhbWVOb3RpZmljYXRpb25zX1VzZXJTdGF0dXMSMQoHc3Rl",
            "YW1pZBgBIAEoBkIggrUYHFRoZSBzcGVjaWZpYyB1c2VyJ3Mgc3RlYW1pZC4S",
            "pAEKBXN0YXRlGAIgASgJQpQBgrUYjwFUaGUgdXNlcidzIHN0YXRlLiAgcmVh",
            "ZHkgLS0gdGhlIHVzZXIgaXMgcmVhZHkgdG8gcGxheS4gIHdhaXRpbmcgLS0g",
            "VGhlIGdhbWUgaXMgd2FpdGluZyBvbiBhbiBhY3Rpb24gZnJvbSB0aGUgdXNl",
            "ci4gY29tcGxldGVkLCB0aGUgZ2FtZSBpcyBvdmVyLhKEAQoFdGl0bGUYAyAB",
            "KAsyIS5DR2FtZU5vdGlmaWNhdGlvbnNfTG9jYWxpemVkVGV4dEJSgrUYTlRp",
            "dGxlIG9mIHRoZSBzZXNzaW9uIHRvIGRpc3BsYXkgdG8gdGhpcyB1c2VyIGlu",
            "IHRoZWlyIGxpc3Qgb2YgYWN0aXZlIHNlc3Npb25zLhKSAQoHbWVzc2FnZRgE",
            "IAEoCzIhLkNHYW1lTm90aWZpY2F0aW9uc19Mb2NhbGl6ZWRUZXh0Ql6CtRha",
            "U3VidGl0bGUgb2YgdGhlIHNlc3Npb24gdG8gZGlzcGxheSB0byB0aGlzIHVz",
            "ZXIgdXNlciB3aXRoaW4gdGhlaXIgbGlzdCBvZiBhY3RpdmUgc2Vzc2lvbnMu",
            "IpMFCihDR2FtZU5vdGlmaWNhdGlvbnNfQ3JlYXRlU2Vzc2lvbl9SZXF1ZXN0",
            "EjcKBWFwcGlkGAEgASgNQiiCtRgkVGhlIGFwcGlkIHRvIGNyZWF0ZSB0aGUg",
            "c2Vzc2lvbiBmb3IuEn8KB2NvbnRleHQYAiABKARCboK1GGpHYW1lLXNwZWNp",
            "ZmllZCBjb250ZXh0IHZhbHVlIHRoZSBnYW1lIGNhbiB1c2VkIHRvIGFzc29j",
            "aWF0ZSB0aGUgc2Vzc2lvbiB3aXRoIHNvbWUgb2JqZWN0IG9uIHRoZWlyIGJh",
            "Y2tlbmQuEoMBCgV0aXRsZRgDIAEoCzIhLkNHYW1lTm90aWZpY2F0aW9uc19M",
            "b2NhbGl6ZWRUZXh0QlGCtRhNVGhlIHRpdGxlIG9mIHRoZSBzZXNzaW9uIHRv",
            "IGJlIGRpc3BsYXllZCB3aXRoaW4gZWFjaCB1c2VyJ3MgbGlzdCBvZiBzZXNz",
            "aW9ucy4SYQoFdXNlcnMYBCADKAsyHi5DR2FtZU5vdGlmaWNhdGlvbnNfVXNl",
            "clN0YXR1c0IygrUYLlRoZSBpbml0aWFsIHN0YXRlIG9mIGFsbCB1c2VycyBp",
            "biB0aGUgc2Vzc2lvbi4SwwEKB3N0ZWFtaWQYBSABKAZCsQGCtRisAShPcHRp",
            "b25hbCkgc3RlYW1pZCB0byBtYWtlIHRoZSByZXF1ZXN0IG9uIGJlaGFsZiBv",
            "ZiAtLSBpZiBzcGVjaWZpZWQsIHRoZSB1c2VyIG11c3QgYmUgaW4gdGhlIHNl",
            "c3Npb24gYW5kIGFsbCB1c2VycyBiZWluZyBhZGRlZCB0byB0aGUgc2Vzc2lv",
            "biBtdXN0IGJlIGZyaWVuZHMgd2l0aCB0aGUgdXNlci4iaQopQ0dhbWVOb3Rp",
            "ZmljYXRpb25zX0NyZWF0ZVNlc3Npb25fUmVzcG9uc2USPAoJc2Vzc2lvbmlk",
            "GAEgASgEQimCtRglVGhlIHNlc3Npb25pZCBvZiB0aGUgY3JlYXRlZCBzZXNz",
            "aW9uLiKPAgooQ0dhbWVOb3RpZmljYXRpb25zX0RlbGV0ZVNlc3Npb25fUmVx",
            "dWVzdBIvCglzZXNzaW9uaWQYASABKARCHIK1GBhUaGUgc2Vzc2lvbmlkIHRv",
            "IGRlbGV0ZS4SNgoFYXBwaWQYAiABKA1CJ4K1GCNUaGUgYXBwaWQgb2YgdGhl",
            "IHNlc3Npb24gdG8gZGVsZXRlLhJ6CgdzdGVhbWlkGAMgASgGQmmCtRhlKE9w",
            "dGlvbmFsKSBzdGVhbWlkIHRvIG1ha2UgdGhlIHJlcXVlc3Qgb24gYmVoYWxm",
            "IG9mIC0tIGlmIHNwZWNpZmllZCwgdGhlIHVzZXIgbXVzdCBiZSBpbiB0aGUg",
            "c2Vzc2lvbi4iKwopQ0dhbWVOb3RpZmljYXRpb25zX0RlbGV0ZVNlc3Npb25f",
            "UmVzcG9uc2UivQUKKENHYW1lTm90aWZpY2F0aW9uc19VcGRhdGVTZXNzaW9u",
            "X1JlcXVlc3QSLwoJc2Vzc2lvbmlkGAEgASgEQhyCtRgYVGhlIHNlc3Npb25p",
            "ZCB0byB1cGRhdGUuEjYKBWFwcGlkGAIgASgNQieCtRgjVGhlIGFwcGlkIG9m",
            "IHRoZSBzZXNzaW9uIHRvIHVwZGF0ZS4SkAEKBXRpdGxlGAMgASgLMiEuQ0dh",
            "bWVOb3RpZmljYXRpb25zX0xvY2FsaXplZFRleHRCXoK1GFooT3B0aW9uYWwp",
            "IFRoZSBuZXcgdGl0bGUgb2YgdGhlIHNlc3Npb24uICBJZiBub3Qgc3BlY2lm",
            "aWVkLCB0aGUgdGl0bGUgd2lsbCBub3QgYmUgY2hhbmdlZC4SzgEKBXVzZXJz",
            "GAQgAygLMh4uQ0dhbWVOb3RpZmljYXRpb25zX1VzZXJTdGF0dXNCngGCtRiZ",
            "AShPcHRpb25hbCkgQSBsaXN0IG9mIHVzZXJzIHdob3NlIHN0YXRlIHdpbGwg",
            "YmUgdXBkYXRlZCB0byByZWZsZWN0IHRoZSBnaXZlbiBzdGF0ZS4gSWYgdGhl",
            "IHVzZXJzIGFyZSBub3QgYWxyZWFkeSBpbiB0aGUgc2Vzc2lvbiwgdGhleSB3",
            "aWxsIGJlIGFkZGVkIHRvIGl0LhLDAQoHc3RlYW1pZBgGIAEoBkKxAYK1GKwB",
            "KE9wdGlvbmFsKSBzdGVhbWlkIHRvIG1ha2UgdGhlIHJlcXVlc3Qgb24gYmVo",
            "YWxmIG9mIC0tIGlmIHNwZWNpZmllZCwgdGhlIHVzZXIgbXVzdCBiZSBpbiB0",
            "aGUgc2Vzc2lvbiBhbmQgYWxsIHVzZXJzIGJlaW5nIGFkZGVkIHRvIHRoZSBz",
            "ZXNzaW9uIG11c3QgYmUgZnJpZW5kcyB3aXRoIHRoZSB1c2VyLiIrCilDR2Ft",
            "ZU5vdGlmaWNhdGlvbnNfVXBkYXRlU2Vzc2lvbl9SZXNwb25zZSKhBAosQ0dh",
            "bWVOb3RpZmljYXRpb25zX0VudW1lcmF0ZVNlc3Npb25zX1JlcXVlc3QSfgoF",
            "YXBwaWQYASABKA1Cb4K1GGtUaGUgc2Vzc2lvbmlkIHRvIHJlcXVlc3QgZGV0",
            "YWlscyBmb3IuIE9wdGlvbmFsLiBJZiBub3Qgc3BlY2lmaWVkLCBhbGwgdGhl",
            "IHVzZXIncyBzZXNzaW9ucyB3aWxsIGJlIHJldHVybmVkLhKOAQoZaW5jbHVk",
            "ZV9hbGxfdXNlcl9tZXNzYWdlcxgDIAEoCEJrgrUYZyhPcHRpb25hbCkgQm9v",
            "bGVhbiBkZXRlcm1pbmluZyB3aGV0aGVyIHRoZSBtZXNzYWdlIGZvciBhbGwg",
            "dXNlcnMgc2hvdWxkIGJlIGluY2x1ZGVkLiBEZWZhdWx0cyB0byBmYWxzZS4S",
            "mwEKGWluY2x1ZGVfYXV0aF91c2VyX21lc3NhZ2UYBCABKAhCeIK1GHQoT3B0",
            "aW9uYWwpIEJvb2xlYW4gZGV0ZXJtaW5pbmcgd2hldGhlciB0aGUgbWVzc2Fn",
            "ZSBmb3IgdGhlIGF1dGhlbnRpY2F0ZWQgdXNlciBzaG91bGQgYmUgaW5jbHVk",
            "ZWQuIERlZmF1bHRzIHRvIGZhbHNlLhJCCghsYW5ndWFnZRgFIAEoCUIwgrUY",
            "LChPcHRpb25hbCkgTGFuZ3VhZ2UgdG8gbG9jYWxpemUgdGhlIHRleHQgaW4u",
            "IsMEChpDR2FtZU5vdGlmaWNhdGlvbnNfU2Vzc2lvbhI2CglzZXNzaW9uaWQY",
            "ASABKARCI4K1GB9UaGUgc2Vzc2lvbmlkIGZvciB0aGlzIHNlc3Npb24uEi0K",
            "BWFwcGlkGAIgASgEQh6CtRgaVGhlIGFwcGlkIGZvciB0aGUgc2Vzc2lvbi4S",
            "fwoHY29udGV4dBgDIAEoBEJugrUYakdhbWUtc3BlY2lmaWVkIGNvbnRleHQg",
            "dmFsdWUgdGhlIGdhbWUgY2FuIHVzZWQgdG8gYXNzb2NpYXRlIHRoZSBzZXNz",
            "aW9uIHdpdGggc29tZSBvYmplY3Qgb24gdGhlaXIgYmFja2VuZC4SWAoFdGl0",
            "bGUYBCABKAsyIS5DR2FtZU5vdGlmaWNhdGlvbnNfTG9jYWxpemVkVGV4dEIm",
            "grUYIlRoZSBjdXJyZW50IHRpdGxlIGZvciB0aGUgc2Vzc2lvbi4SOwoMdGlt",
            "ZV9jcmVhdGVkGAUgASgNQiWCtRghVGhlIHRpbWUgdGhlIHNlc3Npb24gd2Fz",
            "IGNyZWF0ZWQuEkAKDHRpbWVfdXBkYXRlZBgGIAEoDUIqgrUYJlRoZSBsYXN0",
            "IHRpbWUgdGhlIHNlc3Npb24gd2FzIHVwZGF0ZWQuEmQKC3VzZXJfc3RhdHVz",
            "GAcgAygLMh4uQ0dhbWVOb3RpZmljYXRpb25zX1VzZXJTdGF0dXNCL4K1GCtU",
            "aGUgc3RhdHVzIG9mIGFsbCB0aGUgdXNlcnMgaW4gdGhlIHNlc3Npb24uIoIB",
            "Ci1DR2FtZU5vdGlmaWNhdGlvbnNfRW51bWVyYXRlU2Vzc2lvbnNfUmVzcG9u",
            "c2USUQoIc2Vzc2lvbnMYASADKAsyGy5DR2FtZU5vdGlmaWNhdGlvbnNfU2Vz",
            "c2lvbkIigrUYHkEgbGlzdCBvZiB0aGUgdXNlcidzIHNlc3Npb25zLiLWAwos",
            "Q0dhbWVOb3RpZmljYXRpb25zX0dldFNlc3Npb25EZXRhaWxzX1JlcXVlc3QS",
            "UAoIc2Vzc2lvbnMYASADKAsyPi5DR2FtZU5vdGlmaWNhdGlvbnNfR2V0U2Vz",
            "c2lvbkRldGFpbHNfUmVxdWVzdC5SZXF1ZXN0ZWRTZXNzaW9uEi4KBWFwcGlk",
            "GAIgASgNQh+CtRgbVGhlIGFwcGlkIGZvciB0aGUgc2Vzc2lvbnMuEjcKCGxh",
            "bmd1YWdlGAMgASgJQiWCtRghTGFuZ3VhZ2UgdG8gbG9jYWxpemUgdGhlIHRl",
            "eHQgaW4uGuoBChBSZXF1ZXN0ZWRTZXNzaW9uEjgKCXNlc3Npb25pZBgBIAEo",
            "BEIlgrUYIVRoZSBzZXNzaW9uaWQgdG8gZ2V0IGRldGFpbHMgZm9yLhKbAQoZ",
            "aW5jbHVkZV9hdXRoX3VzZXJfbWVzc2FnZRgDIAEoCEJ4grUYdChPcHRpb25h",
            "bCkgQm9vbGVhbiBkZXRlcm1pbmluZyB3aGV0aGVyIHRoZSBtZXNzYWdlIGZv",
            "ciB0aGUgYXV0aGVudGljYXRlZCB1c2VyIHNob3VsZCBiZSBpbmNsdWRlZC4g",
            "RGVmYXVsdHMgdG8gZmFsc2UuIn8KLUNHYW1lTm90aWZpY2F0aW9uc19HZXRT",
            "ZXNzaW9uRGV0YWlsc19SZXNwb25zZRJOCghzZXNzaW9ucxgBIAMoCzIbLkNH",
            "YW1lTm90aWZpY2F0aW9uc19TZXNzaW9uQh+CtRgbVGhlIGRldGFpbHMgb2Yg",
            "dGhlIHNlc3Npb24uIqgBChhHYW1lTm90aWZpY2F0aW9uU2V0dGluZ3MSNwoF",
            "YXBwaWQYASABKA1CKIK1GCRUaGUgYXBwaWQgdG8gY3JlYXRlIHRoZSBzZXNz",
            "aW9uIGZvci4SUwoTYWxsb3dfbm90aWZpY2F0aW9ucxgCIAEoCEI2grUYMldo",
            "ZXRoZXIgdGhlIHVzZXIgYWxsb3dzIG5vdGlmaWNhdGlvbiBmb3IgdGhpcyBh",
            "cHAuInYKNUNHYW1lTm90aWZpY2F0aW9uc19VcGRhdGVOb3RpZmljYXRpb25T",
            "ZXR0aW5nc19SZXF1ZXN0Ej0KGmdhbWVfbm90aWZpY2F0aW9uX3NldHRpbmdz",
            "GAEgAygLMhkuR2FtZU5vdGlmaWNhdGlvblNldHRpbmdzIjgKNkNHYW1lTm90",
            "aWZpY2F0aW9uc19VcGRhdGVOb3RpZmljYXRpb25TZXR0aW5nc19SZXNwb25z",
            "ZSLGAQo4Q0dhbWVOb3RpZmljYXRpb25zX09uTm90aWZpY2F0aW9uc1JlcXVl",
            "c3RlZF9Ob3RpZmljYXRpb24STgoHc3RlYW1pZBgBIAEoBkI9grUYOXN0ZWFt",
            "aWQgb2YgdGhlIHVzZXIgd2hvIG5vdGlmaWNhdGlvbnMgd2VyZSByZXF1ZXN0",
            "ZWQgZm9yLhI6CgVhcHBpZBgCIAEoDUIrgrUYJ1RoZSBhcHBpZCB0aGF0IHJl",
            "cXVlc3RlZCBub3RpZmljYXRpb25zLiK+AwozQ0dhbWVOb3RpZmljYXRpb25z",
            "X09uVXNlclN0YXR1c0NoYW5nZWRfTm90aWZpY2F0aW9uEj4KB3N0ZWFtaWQY",
            "ASABKAZCLYK1GClzdGVhbWlkIG9mIHRoZSB1c2VyIHdob3NlIHN0YXR1cyBj",
            "aGFuZ2VkLhJYCglzZXNzaW9uaWQYAiABKARCRYK1GEFUaGUgc2Vzc2lvbmlk",
            "IG9mIHRoZSBzZXNzaW9uIHdoZXJlIHRoZSB1c2VyJ3Mgc3RhdHVzIHdhcyBj",
            "aGFuZ2VkLhJMCgVhcHBpZBgDIAEoDUI9grUYOVRoZSBhcHBpZCBvZiB0aGUg",
            "c2Vzc2lvbiB3aGVyZSB0aGUgdXNlcidzIHN0YXR1cyBjaGFuZ2VkLhJWCgZz",
            "dGF0dXMYBCABKAsyHi5DR2FtZU5vdGlmaWNhdGlvbnNfVXNlclN0YXR1c0Im",
            "grUYIihPcHRpb25hbCkgTmV3IHN0YXR1cyBvZiB0aGUgdXNlci4SRwoHcmVt",
            "b3ZlZBgFIAEoCEI2grUYMihPcHRpb25hbCkgVXNlciBoYXMgYmVlbiByZW1v",
            "dmVkIGZyb20gdGhlIHNlc3Npb24uMqYIChFHYW1lTm90aWZpY2F0aW9ucxKN",
            "AQoRVXNlckNyZWF0ZVNlc3Npb24SKS5DR2FtZU5vdGlmaWNhdGlvbnNfQ3Jl",
            "YXRlU2Vzc2lvbl9SZXF1ZXN0GiouQ0dhbWVOb3RpZmljYXRpb25zX0NyZWF0",
            "ZVNlc3Npb25fUmVzcG9uc2UiIYK1GB1DcmVhdGVzIGFuIGFzeW5jIGdhbWUg",
            "c2Vzc2lvbhKNAQoRVXNlckRlbGV0ZVNlc3Npb24SKS5DR2FtZU5vdGlmaWNh",
            "dGlvbnNfRGVsZXRlU2Vzc2lvbl9SZXF1ZXN0GiouQ0dhbWVOb3RpZmljYXRp",
            "b25zX0RlbGV0ZVNlc3Npb25fUmVzcG9uc2UiIYK1GB1EZWxldGVzIGFuIGFz",
            "eW5jIGdhbWUgc2Vzc2lvbhKNAQoRVXNlclVwZGF0ZVNlc3Npb24SKS5DR2Ft",
            "ZU5vdGlmaWNhdGlvbnNfVXBkYXRlU2Vzc2lvbl9SZXF1ZXN0GiouQ0dhbWVO",
            "b3RpZmljYXRpb25zX1VwZGF0ZVNlc3Npb25fUmVzcG9uc2UiIYK1GB1VcGRh",
            "dGVzIGFuIGFzeW5jIGdhbWUgc2Vzc2lvbhKUAQoRRW51bWVyYXRlU2Vzc2lv",
            "bnMSLS5DR2FtZU5vdGlmaWNhdGlvbnNfRW51bWVyYXRlU2Vzc2lvbnNfUmVx",
            "dWVzdBouLkNHYW1lTm90aWZpY2F0aW9uc19FbnVtZXJhdGVTZXNzaW9uc19S",
            "ZXNwb25zZSIggrUYHEVudW1lcmF0ZXMgYSB1c2VyJ3Mgc2Vzc2lvbnMSngEK",
            "EUdldFNlc3Npb25EZXRhaWxzEi0uQ0dhbWVOb3RpZmljYXRpb25zX0dldFNl",
            "c3Npb25EZXRhaWxzX1JlcXVlc3QaLi5DR2FtZU5vdGlmaWNhdGlvbnNfR2V0",
            "U2Vzc2lvbkRldGFpbHNfUmVzcG9uc2UiKoK1GCZHZXQgdGhlIGRldGFpbHMg",
            "Zm9yIGEgc3BlY2lmaWMgc2Vzc2lvbhLWAQoaVXBkYXRlTm90aWZpY2F0aW9u",
            "U2V0dGluZ3MSNi5DR2FtZU5vdGlmaWNhdGlvbnNfVXBkYXRlTm90aWZpY2F0",
            "aW9uU2V0dGluZ3NfUmVxdWVzdBo3LkNHYW1lTm90aWZpY2F0aW9uc19VcGRh",
            "dGVOb3RpZmljYXRpb25TZXR0aW5nc19SZXNwb25zZSJHgrUYQ1VwZGF0ZXMg",
            "d2hldGhlciBhIHVzZXIgYWxsb3dzIGdhbWUgbm90aWZpY2F0aW9ucyBmb3Ig",
            "YSBzcGVjaWZpYyBhcHAaUIK1GExBIHNlcnZpY2UgZm9yIGZ1bmN0aW9ucyBy",
            "ZWxhdGVkIHRvIHRoZSBhc3luY3Jvbm91cyBnYW1lIG5vdGlmaWNhdGlvbiBz",
            "ZXJ2ZXIuMt8CChdHYW1lTm90aWZpY2F0aW9uc0NsaWVudBKVAQoYT25Ob3Rp",
            "ZmljYXRpb25zUmVxdWVzdGVkEjkuQ0dhbWVOb3RpZmljYXRpb25zX09uTm90",
            "aWZpY2F0aW9uc1JlcXVlc3RlZF9Ob3RpZmljYXRpb24aCy5Ob1Jlc3BvbnNl",
            "IjGCtRgtUmVxdWVzdHMgdGhhdCB0aGUgdXNlciBvcHQgaW50byBub3RpZmlj",
            "YXRpb25zEo0BChNPblVzZXJTdGF0dXNDaGFuZ2VkEjQuQ0dhbWVOb3RpZmlj",
            "YXRpb25zX09uVXNlclN0YXR1c0NoYW5nZWRfTm90aWZpY2F0aW9uGgsuTm9S",
            "ZXNwb25zZSIzgrUYL05vdGlmaWNhdGlvbiB0aGF0IHRoZSB1c2VyJ3Mgc3Rh",
            "dHVzIGhhcyBjaGFuZ2VkGhyCtRgUQ2xpZW50IG5vdGlmaWNhdGlvbnPAtRgC",
            "Qh2AAQGqAhdPcGVuU3RlYW13b3Jrcy5Qcm90b2J1Zg=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.Reflection.DescriptorReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesBaseReflection.Descriptor, global::OpenSteamworks.Protobuf.SteammessagesUnifiedBaseSteamclientReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_Variable), global::OpenSteamworks.Protobuf.CGameNotifications_Variable.Parser, new[]{ "Key", "Value" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText), global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText.Parser, new[]{ "Token", "Variables", "RenderedText" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus), global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus.Parser, new[]{ "Steamid", "State", "Title", "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_CreateSession_Request), global::OpenSteamworks.Protobuf.CGameNotifications_CreateSession_Request.Parser, new[]{ "Appid", "Context", "Title", "Users", "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_CreateSession_Response), global::OpenSteamworks.Protobuf.CGameNotifications_CreateSession_Response.Parser, new[]{ "Sessionid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_DeleteSession_Request), global::OpenSteamworks.Protobuf.CGameNotifications_DeleteSession_Request.Parser, new[]{ "Sessionid", "Appid", "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_DeleteSession_Response), global::OpenSteamworks.Protobuf.CGameNotifications_DeleteSession_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_UpdateSession_Request), global::OpenSteamworks.Protobuf.CGameNotifications_UpdateSession_Request.Parser, new[]{ "Sessionid", "Appid", "Title", "Users", "Steamid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_UpdateSession_Response), global::OpenSteamworks.Protobuf.CGameNotifications_UpdateSession_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_EnumerateSessions_Request), global::OpenSteamworks.Protobuf.CGameNotifications_EnumerateSessions_Request.Parser, new[]{ "Appid", "IncludeAllUserMessages", "IncludeAuthUserMessage", "Language" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_Session), global::OpenSteamworks.Protobuf.CGameNotifications_Session.Parser, new[]{ "Sessionid", "Appid", "Context", "Title", "TimeCreated", "TimeUpdated", "UserStatus" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_EnumerateSessions_Response), global::OpenSteamworks.Protobuf.CGameNotifications_EnumerateSessions_Response.Parser, new[]{ "Sessions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request), global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request.Parser, new[]{ "Sessions", "Appid", "Language" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request.Types.RequestedSession), global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request.Types.RequestedSession.Parser, new[]{ "Sessionid", "IncludeAuthUserMessage" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Response), global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Response.Parser, new[]{ "Sessions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.GameNotificationSettings), global::OpenSteamworks.Protobuf.GameNotificationSettings.Parser, new[]{ "Appid", "AllowNotifications" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_UpdateNotificationSettings_Request), global::OpenSteamworks.Protobuf.CGameNotifications_UpdateNotificationSettings_Request.Parser, new[]{ "GameNotificationSettings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_UpdateNotificationSettings_Response), global::OpenSteamworks.Protobuf.CGameNotifications_UpdateNotificationSettings_Response.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_OnNotificationsRequested_Notification), global::OpenSteamworks.Protobuf.CGameNotifications_OnNotificationsRequested_Notification.Parser, new[]{ "Steamid", "Appid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::OpenSteamworks.Protobuf.CGameNotifications_OnUserStatusChanged_Notification), global::OpenSteamworks.Protobuf.CGameNotifications_OnUserStatusChanged_Notification.Parser, new[]{ "Steamid", "Sessionid", "Appid", "Status", "Removed" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class CGameNotifications_Variable : pb::IMessage<CGameNotifications_Variable>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_Variable> _parser = new pb::MessageParser<CGameNotifications_Variable>(() => new CGameNotifications_Variable());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_Variable> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_Variable() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_Variable(CGameNotifications_Variable other) : this() {
      key_ = other.key_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_Variable Clone() {
      return new CGameNotifications_Variable(this);
    }

    /// <summary>Field number for the "key" field.</summary>
    public const int KeyFieldNumber = 1;
    private readonly static string KeyDefaultValue = "";

    private string key_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Key {
      get { return key_ ?? KeyDefaultValue; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "key" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasKey {
      get { return key_ != null; }
    }
    /// <summary>Clears the value of the "key" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearKey() {
      key_ = null;
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 2;
    private readonly static string ValueDefaultValue = "";

    private string value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Value {
      get { return value_ ?? ValueDefaultValue; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "value" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasValue {
      get { return value_ != null; }
    }
    /// <summary>Clears the value of the "value" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearValue() {
      value_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_Variable);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_Variable other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasKey) hash ^= Key.GetHashCode();
      if (HasValue) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasKey) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (HasValue) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasKey) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (HasValue) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_Variable other) {
      if (other == null) {
        return;
      }
      if (other.HasKey) {
        Key = other.Key;
      }
      if (other.HasValue) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_LocalizedText : pb::IMessage<CGameNotifications_LocalizedText>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_LocalizedText> _parser = new pb::MessageParser<CGameNotifications_LocalizedText>(() => new CGameNotifications_LocalizedText());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_LocalizedText> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_LocalizedText() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_LocalizedText(CGameNotifications_LocalizedText other) : this() {
      token_ = other.token_;
      variables_ = other.variables_.Clone();
      renderedText_ = other.renderedText_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_LocalizedText Clone() {
      return new CGameNotifications_LocalizedText(this);
    }

    /// <summary>Field number for the "token" field.</summary>
    public const int TokenFieldNumber = 1;
    private readonly static string TokenDefaultValue = "";

    private string token_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Token {
      get { return token_ ?? TokenDefaultValue; }
      set {
        token_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "token" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasToken {
      get { return token_ != null; }
    }
    /// <summary>Clears the value of the "token" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearToken() {
      token_ = null;
    }

    /// <summary>Field number for the "variables" field.</summary>
    public const int VariablesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CGameNotifications_Variable> _repeated_variables_codec
        = pb::FieldCodec.ForMessage(18, global::OpenSteamworks.Protobuf.CGameNotifications_Variable.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_Variable> variables_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_Variable>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_Variable> Variables {
      get { return variables_; }
    }

    /// <summary>Field number for the "rendered_text" field.</summary>
    public const int RenderedTextFieldNumber = 3;
    private readonly static string RenderedTextDefaultValue = "";

    private string renderedText_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string RenderedText {
      get { return renderedText_ ?? RenderedTextDefaultValue; }
      set {
        renderedText_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "rendered_text" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRenderedText {
      get { return renderedText_ != null; }
    }
    /// <summary>Clears the value of the "rendered_text" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRenderedText() {
      renderedText_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_LocalizedText);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_LocalizedText other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Token != other.Token) return false;
      if(!variables_.Equals(other.variables_)) return false;
      if (RenderedText != other.RenderedText) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasToken) hash ^= Token.GetHashCode();
      hash ^= variables_.GetHashCode();
      if (HasRenderedText) hash ^= RenderedText.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      variables_.WriteTo(output, _repeated_variables_codec);
      if (HasRenderedText) {
        output.WriteRawTag(26);
        output.WriteString(RenderedText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasToken) {
        output.WriteRawTag(10);
        output.WriteString(Token);
      }
      variables_.WriteTo(ref output, _repeated_variables_codec);
      if (HasRenderedText) {
        output.WriteRawTag(26);
        output.WriteString(RenderedText);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasToken) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Token);
      }
      size += variables_.CalculateSize(_repeated_variables_codec);
      if (HasRenderedText) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RenderedText);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_LocalizedText other) {
      if (other == null) {
        return;
      }
      if (other.HasToken) {
        Token = other.Token;
      }
      variables_.Add(other.variables_);
      if (other.HasRenderedText) {
        RenderedText = other.RenderedText;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            variables_.AddEntriesFrom(input, _repeated_variables_codec);
            break;
          }
          case 26: {
            RenderedText = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Token = input.ReadString();
            break;
          }
          case 18: {
            variables_.AddEntriesFrom(ref input, _repeated_variables_codec);
            break;
          }
          case 26: {
            RenderedText = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_UserStatus : pb::IMessage<CGameNotifications_UserStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_UserStatus> _parser = new pb::MessageParser<CGameNotifications_UserStatus>(() => new CGameNotifications_UserStatus());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_UserStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UserStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UserStatus(CGameNotifications_UserStatus other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      state_ = other.state_;
      title_ = other.title_ != null ? other.title_.Clone() : null;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UserStatus Clone() {
      return new CGameNotifications_UserStatus(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 2;
    private readonly static string StateDefaultValue = "";

    private string state_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string State {
      get { return state_ ?? StateDefaultValue; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "state" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasState {
      get { return state_ != null; }
    }
    /// <summary>Clears the value of the "state" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearState() {
      state_ = null;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 4;
    private global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_UserStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_UserStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (State != other.State) return false;
      if (!object.Equals(Title, other.Title)) return false;
      if (!object.Equals(Message, other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasState) hash ^= State.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasState) {
        output.WriteRawTag(18);
        output.WriteString(State);
      }
      if (title_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Title);
      }
      if (message_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasState) {
        output.WriteRawTag(18);
        output.WriteString(State);
      }
      if (title_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Title);
      }
      if (message_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasState) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (title_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_UserStatus other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasState) {
        State = other.State;
      }
      if (other.title_ != null) {
        if (title_ == null) {
          Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
        }
        Title.MergeFrom(other.Title);
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
        }
        Message.MergeFrom(other.Message);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            State = input.ReadString();
            break;
          }
          case 26: {
            if (title_ == null) {
              Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Title);
            break;
          }
          case 34: {
            if (message_ == null) {
              Message = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 18: {
            State = input.ReadString();
            break;
          }
          case 26: {
            if (title_ == null) {
              Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Title);
            break;
          }
          case 34: {
            if (message_ == null) {
              Message = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Message);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_CreateSession_Request : pb::IMessage<CGameNotifications_CreateSession_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_CreateSession_Request> _parser = new pb::MessageParser<CGameNotifications_CreateSession_Request>(() => new CGameNotifications_CreateSession_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_CreateSession_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_CreateSession_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_CreateSession_Request(CGameNotifications_CreateSession_Request other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      context_ = other.context_;
      title_ = other.title_ != null ? other.title_.Clone() : null;
      users_ = other.users_.Clone();
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_CreateSession_Request Clone() {
      return new CGameNotifications_CreateSession_Request(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 2;
    private readonly static ulong ContextDefaultValue = 0UL;

    private ulong context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Context {
      get { if ((_hasBits0 & 2) != 0) { return context_; } else { return ContextDefaultValue; } }
      set {
        _hasBits0 |= 2;
        context_ = value;
      }
    }
    /// <summary>Gets whether the "context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContext {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContext() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus> _repeated_users_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus> users_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus> Users {
      get { return users_; }
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 5;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 4) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_CreateSession_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_CreateSession_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (Context != other.Context) return false;
      if (!object.Equals(Title, other.Title)) return false;
      if(!users_.Equals(other.users_)) return false;
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasContext) hash ^= Context.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      hash ^= users_.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasContext) {
        output.WriteRawTag(16);
        output.WriteUInt64(Context);
      }
      if (title_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Title);
      }
      users_.WriteTo(output, _repeated_users_codec);
      if (HasSteamid) {
        output.WriteRawTag(41);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasContext) {
        output.WriteRawTag(16);
        output.WriteUInt64(Context);
      }
      if (title_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Title);
      }
      users_.WriteTo(ref output, _repeated_users_codec);
      if (HasSteamid) {
        output.WriteRawTag(41);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasContext) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Context);
      }
      if (title_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
      }
      size += users_.CalculateSize(_repeated_users_codec);
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_CreateSession_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasContext) {
        Context = other.Context;
      }
      if (other.title_ != null) {
        if (title_ == null) {
          Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
        }
        Title.MergeFrom(other.Title);
      }
      users_.Add(other.users_);
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Context = input.ReadUInt64();
            break;
          }
          case 26: {
            if (title_ == null) {
              Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Title);
            break;
          }
          case 34: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
          case 41: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            Context = input.ReadUInt64();
            break;
          }
          case 26: {
            if (title_ == null) {
              Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Title);
            break;
          }
          case 34: {
            users_.AddEntriesFrom(ref input, _repeated_users_codec);
            break;
          }
          case 41: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_CreateSession_Response : pb::IMessage<CGameNotifications_CreateSession_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_CreateSession_Response> _parser = new pb::MessageParser<CGameNotifications_CreateSession_Response>(() => new CGameNotifications_CreateSession_Response());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_CreateSession_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_CreateSession_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_CreateSession_Response(CGameNotifications_CreateSession_Response other) : this() {
      _hasBits0 = other._hasBits0;
      sessionid_ = other.sessionid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_CreateSession_Response Clone() {
      return new CGameNotifications_CreateSession_Response(this);
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 1;
    private readonly static ulong SessionidDefaultValue = 0UL;

    private ulong sessionid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Sessionid {
      get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sessionid_ = value;
      }
    }
    /// <summary>Gets whether the "sessionid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sessionid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionid() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_CreateSession_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_CreateSession_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sessionid != other.Sessionid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionid) hash ^= Sessionid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sessionid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sessionid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_CreateSession_Response other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionid) {
        Sessionid = other.Sessionid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sessionid = input.ReadUInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Sessionid = input.ReadUInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_DeleteSession_Request : pb::IMessage<CGameNotifications_DeleteSession_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_DeleteSession_Request> _parser = new pb::MessageParser<CGameNotifications_DeleteSession_Request>(() => new CGameNotifications_DeleteSession_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_DeleteSession_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_DeleteSession_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_DeleteSession_Request(CGameNotifications_DeleteSession_Request other) : this() {
      _hasBits0 = other._hasBits0;
      sessionid_ = other.sessionid_;
      appid_ = other.appid_;
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_DeleteSession_Request Clone() {
      return new CGameNotifications_DeleteSession_Request(this);
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 1;
    private readonly static ulong SessionidDefaultValue = 0UL;

    private ulong sessionid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Sessionid {
      get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sessionid_ = value;
      }
    }
    /// <summary>Gets whether the "sessionid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sessionid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 2;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 3;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 4) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_DeleteSession_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_DeleteSession_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sessionid != other.Sessionid) return false;
      if (Appid != other.Appid) return false;
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionid) hash ^= Sessionid.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sessionid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasSteamid) {
        output.WriteRawTag(25);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sessionid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasSteamid) {
        output.WriteRawTag(25);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_DeleteSession_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionid) {
        Sessionid = other.Sessionid;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sessionid = input.ReadUInt64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 25: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Sessionid = input.ReadUInt64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 25: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_DeleteSession_Response : pb::IMessage<CGameNotifications_DeleteSession_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_DeleteSession_Response> _parser = new pb::MessageParser<CGameNotifications_DeleteSession_Response>(() => new CGameNotifications_DeleteSession_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_DeleteSession_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_DeleteSession_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_DeleteSession_Response(CGameNotifications_DeleteSession_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_DeleteSession_Response Clone() {
      return new CGameNotifications_DeleteSession_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_DeleteSession_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_DeleteSession_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_DeleteSession_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_UpdateSession_Request : pb::IMessage<CGameNotifications_UpdateSession_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_UpdateSession_Request> _parser = new pb::MessageParser<CGameNotifications_UpdateSession_Request>(() => new CGameNotifications_UpdateSession_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_UpdateSession_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateSession_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateSession_Request(CGameNotifications_UpdateSession_Request other) : this() {
      _hasBits0 = other._hasBits0;
      sessionid_ = other.sessionid_;
      appid_ = other.appid_;
      title_ = other.title_ != null ? other.title_.Clone() : null;
      users_ = other.users_.Clone();
      steamid_ = other.steamid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateSession_Request Clone() {
      return new CGameNotifications_UpdateSession_Request(this);
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 1;
    private readonly static ulong SessionidDefaultValue = 0UL;

    private ulong sessionid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Sessionid {
      get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sessionid_ = value;
      }
    }
    /// <summary>Gets whether the "sessionid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sessionid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 2;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 3;
    private global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 4;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus> _repeated_users_codec
        = pb::FieldCodec.ForMessage(34, global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus> users_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus> Users {
      get { return users_; }
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 6;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 4) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~4;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_UpdateSession_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_UpdateSession_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sessionid != other.Sessionid) return false;
      if (Appid != other.Appid) return false;
      if (!object.Equals(Title, other.Title)) return false;
      if(!users_.Equals(other.users_)) return false;
      if (Steamid != other.Steamid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionid) hash ^= Sessionid.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      hash ^= users_.GetHashCode();
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sessionid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (title_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Title);
      }
      users_.WriteTo(output, _repeated_users_codec);
      if (HasSteamid) {
        output.WriteRawTag(49);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sessionid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (title_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Title);
      }
      users_.WriteTo(ref output, _repeated_users_codec);
      if (HasSteamid) {
        output.WriteRawTag(49);
        output.WriteFixed64(Steamid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (title_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
      }
      size += users_.CalculateSize(_repeated_users_codec);
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_UpdateSession_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionid) {
        Sessionid = other.Sessionid;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.title_ != null) {
        if (title_ == null) {
          Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
        }
        Title.MergeFrom(other.Title);
      }
      users_.Add(other.users_);
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sessionid = input.ReadUInt64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 26: {
            if (title_ == null) {
              Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Title);
            break;
          }
          case 34: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
          case 49: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Sessionid = input.ReadUInt64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 26: {
            if (title_ == null) {
              Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Title);
            break;
          }
          case 34: {
            users_.AddEntriesFrom(ref input, _repeated_users_codec);
            break;
          }
          case 49: {
            Steamid = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_UpdateSession_Response : pb::IMessage<CGameNotifications_UpdateSession_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_UpdateSession_Response> _parser = new pb::MessageParser<CGameNotifications_UpdateSession_Response>(() => new CGameNotifications_UpdateSession_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_UpdateSession_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateSession_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateSession_Response(CGameNotifications_UpdateSession_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateSession_Response Clone() {
      return new CGameNotifications_UpdateSession_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_UpdateSession_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_UpdateSession_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_UpdateSession_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_EnumerateSessions_Request : pb::IMessage<CGameNotifications_EnumerateSessions_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_EnumerateSessions_Request> _parser = new pb::MessageParser<CGameNotifications_EnumerateSessions_Request>(() => new CGameNotifications_EnumerateSessions_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_EnumerateSessions_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_EnumerateSessions_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_EnumerateSessions_Request(CGameNotifications_EnumerateSessions_Request other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      includeAllUserMessages_ = other.includeAllUserMessages_;
      includeAuthUserMessage_ = other.includeAuthUserMessage_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_EnumerateSessions_Request Clone() {
      return new CGameNotifications_EnumerateSessions_Request(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "include_all_user_messages" field.</summary>
    public const int IncludeAllUserMessagesFieldNumber = 3;
    private readonly static bool IncludeAllUserMessagesDefaultValue = false;

    private bool includeAllUserMessages_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeAllUserMessages {
      get { if ((_hasBits0 & 2) != 0) { return includeAllUserMessages_; } else { return IncludeAllUserMessagesDefaultValue; } }
      set {
        _hasBits0 |= 2;
        includeAllUserMessages_ = value;
      }
    }
    /// <summary>Gets whether the "include_all_user_messages" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeAllUserMessages {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "include_all_user_messages" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeAllUserMessages() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "include_auth_user_message" field.</summary>
    public const int IncludeAuthUserMessageFieldNumber = 4;
    private readonly static bool IncludeAuthUserMessageDefaultValue = false;

    private bool includeAuthUserMessage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IncludeAuthUserMessage {
      get { if ((_hasBits0 & 4) != 0) { return includeAuthUserMessage_; } else { return IncludeAuthUserMessageDefaultValue; } }
      set {
        _hasBits0 |= 4;
        includeAuthUserMessage_ = value;
      }
    }
    /// <summary>Gets whether the "include_auth_user_message" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasIncludeAuthUserMessage {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "include_auth_user_message" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearIncludeAuthUserMessage() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 5;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_EnumerateSessions_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_EnumerateSessions_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (IncludeAllUserMessages != other.IncludeAllUserMessages) return false;
      if (IncludeAuthUserMessage != other.IncludeAuthUserMessage) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasIncludeAllUserMessages) hash ^= IncludeAllUserMessages.GetHashCode();
      if (HasIncludeAuthUserMessage) hash ^= IncludeAuthUserMessage.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasIncludeAllUserMessages) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeAllUserMessages);
      }
      if (HasIncludeAuthUserMessage) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeAuthUserMessage);
      }
      if (HasLanguage) {
        output.WriteRawTag(42);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasIncludeAllUserMessages) {
        output.WriteRawTag(24);
        output.WriteBool(IncludeAllUserMessages);
      }
      if (HasIncludeAuthUserMessage) {
        output.WriteRawTag(32);
        output.WriteBool(IncludeAuthUserMessage);
      }
      if (HasLanguage) {
        output.WriteRawTag(42);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasIncludeAllUserMessages) {
        size += 1 + 1;
      }
      if (HasIncludeAuthUserMessage) {
        size += 1 + 1;
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_EnumerateSessions_Request other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasIncludeAllUserMessages) {
        IncludeAllUserMessages = other.IncludeAllUserMessages;
      }
      if (other.HasIncludeAuthUserMessage) {
        IncludeAuthUserMessage = other.IncludeAuthUserMessage;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 24: {
            IncludeAllUserMessages = input.ReadBool();
            break;
          }
          case 32: {
            IncludeAuthUserMessage = input.ReadBool();
            break;
          }
          case 42: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 24: {
            IncludeAllUserMessages = input.ReadBool();
            break;
          }
          case 32: {
            IncludeAuthUserMessage = input.ReadBool();
            break;
          }
          case 42: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_Session : pb::IMessage<CGameNotifications_Session>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_Session> _parser = new pb::MessageParser<CGameNotifications_Session>(() => new CGameNotifications_Session());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_Session> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_Session() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_Session(CGameNotifications_Session other) : this() {
      _hasBits0 = other._hasBits0;
      sessionid_ = other.sessionid_;
      appid_ = other.appid_;
      context_ = other.context_;
      title_ = other.title_ != null ? other.title_.Clone() : null;
      timeCreated_ = other.timeCreated_;
      timeUpdated_ = other.timeUpdated_;
      userStatus_ = other.userStatus_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_Session Clone() {
      return new CGameNotifications_Session(this);
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 1;
    private readonly static ulong SessionidDefaultValue = 0UL;

    private ulong sessionid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Sessionid {
      get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        sessionid_ = value;
      }
    }
    /// <summary>Gets whether the "sessionid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "sessionid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 2;
    private readonly static ulong AppidDefaultValue = 0UL;

    private ulong appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Appid {
      get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "context" field.</summary>
    public const int ContextFieldNumber = 3;
    private readonly static ulong ContextDefaultValue = 0UL;

    private ulong context_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Context {
      get { if ((_hasBits0 & 4) != 0) { return context_; } else { return ContextDefaultValue; } }
      set {
        _hasBits0 |= 4;
        context_ = value;
      }
    }
    /// <summary>Gets whether the "context" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasContext {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "context" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearContext() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "title" field.</summary>
    public const int TitleFieldNumber = 4;
    private global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText title_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText Title {
      get { return title_; }
      set {
        title_ = value;
      }
    }

    /// <summary>Field number for the "time_created" field.</summary>
    public const int TimeCreatedFieldNumber = 5;
    private readonly static uint TimeCreatedDefaultValue = 0;

    private uint timeCreated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeCreated {
      get { if ((_hasBits0 & 8) != 0) { return timeCreated_; } else { return TimeCreatedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        timeCreated_ = value;
      }
    }
    /// <summary>Gets whether the "time_created" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeCreated {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "time_created" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeCreated() {
      _hasBits0 &= ~8;
    }

    /// <summary>Field number for the "time_updated" field.</summary>
    public const int TimeUpdatedFieldNumber = 6;
    private readonly static uint TimeUpdatedDefaultValue = 0;

    private uint timeUpdated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint TimeUpdated {
      get { if ((_hasBits0 & 16) != 0) { return timeUpdated_; } else { return TimeUpdatedDefaultValue; } }
      set {
        _hasBits0 |= 16;
        timeUpdated_ = value;
      }
    }
    /// <summary>Gets whether the "time_updated" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasTimeUpdated {
      get { return (_hasBits0 & 16) != 0; }
    }
    /// <summary>Clears the value of the "time_updated" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearTimeUpdated() {
      _hasBits0 &= ~16;
    }

    /// <summary>Field number for the "user_status" field.</summary>
    public const int UserStatusFieldNumber = 7;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus> _repeated_userStatus_codec
        = pb::FieldCodec.ForMessage(58, global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus> userStatus_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus> UserStatus {
      get { return userStatus_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_Session);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_Session other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Sessionid != other.Sessionid) return false;
      if (Appid != other.Appid) return false;
      if (Context != other.Context) return false;
      if (!object.Equals(Title, other.Title)) return false;
      if (TimeCreated != other.TimeCreated) return false;
      if (TimeUpdated != other.TimeUpdated) return false;
      if(!userStatus_.Equals(other.userStatus_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSessionid) hash ^= Sessionid.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasContext) hash ^= Context.GetHashCode();
      if (title_ != null) hash ^= Title.GetHashCode();
      if (HasTimeCreated) hash ^= TimeCreated.GetHashCode();
      if (HasTimeUpdated) hash ^= TimeUpdated.GetHashCode();
      hash ^= userStatus_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSessionid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sessionid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Appid);
      }
      if (HasContext) {
        output.WriteRawTag(24);
        output.WriteUInt64(Context);
      }
      if (title_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Title);
      }
      if (HasTimeCreated) {
        output.WriteRawTag(40);
        output.WriteUInt32(TimeCreated);
      }
      if (HasTimeUpdated) {
        output.WriteRawTag(48);
        output.WriteUInt32(TimeUpdated);
      }
      userStatus_.WriteTo(output, _repeated_userStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSessionid) {
        output.WriteRawTag(8);
        output.WriteUInt64(Sessionid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Appid);
      }
      if (HasContext) {
        output.WriteRawTag(24);
        output.WriteUInt64(Context);
      }
      if (title_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Title);
      }
      if (HasTimeCreated) {
        output.WriteRawTag(40);
        output.WriteUInt32(TimeCreated);
      }
      if (HasTimeUpdated) {
        output.WriteRawTag(48);
        output.WriteUInt32(TimeUpdated);
      }
      userStatus_.WriteTo(ref output, _repeated_userStatus_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSessionid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Appid);
      }
      if (HasContext) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Context);
      }
      if (title_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Title);
      }
      if (HasTimeCreated) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeCreated);
      }
      if (HasTimeUpdated) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(TimeUpdated);
      }
      size += userStatus_.CalculateSize(_repeated_userStatus_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_Session other) {
      if (other == null) {
        return;
      }
      if (other.HasSessionid) {
        Sessionid = other.Sessionid;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasContext) {
        Context = other.Context;
      }
      if (other.title_ != null) {
        if (title_ == null) {
          Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
        }
        Title.MergeFrom(other.Title);
      }
      if (other.HasTimeCreated) {
        TimeCreated = other.TimeCreated;
      }
      if (other.HasTimeUpdated) {
        TimeUpdated = other.TimeUpdated;
      }
      userStatus_.Add(other.userStatus_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Sessionid = input.ReadUInt64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt64();
            break;
          }
          case 24: {
            Context = input.ReadUInt64();
            break;
          }
          case 34: {
            if (title_ == null) {
              Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Title);
            break;
          }
          case 40: {
            TimeCreated = input.ReadUInt32();
            break;
          }
          case 48: {
            TimeUpdated = input.ReadUInt32();
            break;
          }
          case 58: {
            userStatus_.AddEntriesFrom(input, _repeated_userStatus_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Sessionid = input.ReadUInt64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt64();
            break;
          }
          case 24: {
            Context = input.ReadUInt64();
            break;
          }
          case 34: {
            if (title_ == null) {
              Title = new global::OpenSteamworks.Protobuf.CGameNotifications_LocalizedText();
            }
            input.ReadMessage(Title);
            break;
          }
          case 40: {
            TimeCreated = input.ReadUInt32();
            break;
          }
          case 48: {
            TimeUpdated = input.ReadUInt32();
            break;
          }
          case 58: {
            userStatus_.AddEntriesFrom(ref input, _repeated_userStatus_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_EnumerateSessions_Response : pb::IMessage<CGameNotifications_EnumerateSessions_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_EnumerateSessions_Response> _parser = new pb::MessageParser<CGameNotifications_EnumerateSessions_Response>(() => new CGameNotifications_EnumerateSessions_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_EnumerateSessions_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_EnumerateSessions_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_EnumerateSessions_Response(CGameNotifications_EnumerateSessions_Response other) : this() {
      sessions_ = other.sessions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_EnumerateSessions_Response Clone() {
      return new CGameNotifications_EnumerateSessions_Response(this);
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CGameNotifications_Session> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CGameNotifications_Session.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_Session> sessions_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_Session>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_Session> Sessions {
      get { return sessions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_EnumerateSessions_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_EnumerateSessions_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sessions_.Equals(other.sessions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sessions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sessions_.WriteTo(output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sessions_.WriteTo(ref output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_EnumerateSessions_Response other) {
      if (other == null) {
        return;
      }
      sessions_.Add(other.sessions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_GetSessionDetails_Request : pb::IMessage<CGameNotifications_GetSessionDetails_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_GetSessionDetails_Request> _parser = new pb::MessageParser<CGameNotifications_GetSessionDetails_Request>(() => new CGameNotifications_GetSessionDetails_Request());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_GetSessionDetails_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_GetSessionDetails_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_GetSessionDetails_Request(CGameNotifications_GetSessionDetails_Request other) : this() {
      _hasBits0 = other._hasBits0;
      sessions_ = other.sessions_.Clone();
      appid_ = other.appid_;
      language_ = other.language_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_GetSessionDetails_Request Clone() {
      return new CGameNotifications_GetSessionDetails_Request(this);
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request.Types.RequestedSession> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request.Types.RequestedSession.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request.Types.RequestedSession> sessions_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request.Types.RequestedSession>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request.Types.RequestedSession> Sessions {
      get { return sessions_; }
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 2;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "language" field.</summary>
    public const int LanguageFieldNumber = 3;
    private readonly static string LanguageDefaultValue = "";

    private string language_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Language {
      get { return language_ ?? LanguageDefaultValue; }
      set {
        language_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "language" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasLanguage {
      get { return language_ != null; }
    }
    /// <summary>Clears the value of the "language" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearLanguage() {
      language_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_GetSessionDetails_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_GetSessionDetails_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sessions_.Equals(other.sessions_)) return false;
      if (Appid != other.Appid) return false;
      if (Language != other.Language) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sessions_.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasLanguage) hash ^= Language.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sessions_.WriteTo(output, _repeated_sessions_codec);
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasLanguage) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sessions_.WriteTo(ref output, _repeated_sessions_codec);
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (HasLanguage) {
        output.WriteRawTag(26);
        output.WriteString(Language);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasLanguage) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Language);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_GetSessionDetails_Request other) {
      if (other == null) {
        return;
      }
      sessions_.Add(other.sessions_);
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasLanguage) {
        Language = other.Language;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
          case 26: {
            Language = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the CGameNotifications_GetSessionDetails_Request message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class RequestedSession : pb::IMessage<RequestedSession>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<RequestedSession> _parser = new pb::MessageParser<RequestedSession>(() => new RequestedSession());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<RequestedSession> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::OpenSteamworks.Protobuf.CGameNotifications_GetSessionDetails_Request.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RequestedSession() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RequestedSession(RequestedSession other) : this() {
          _hasBits0 = other._hasBits0;
          sessionid_ = other.sessionid_;
          includeAuthUserMessage_ = other.includeAuthUserMessage_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public RequestedSession Clone() {
          return new RequestedSession(this);
        }

        /// <summary>Field number for the "sessionid" field.</summary>
        public const int SessionidFieldNumber = 1;
        private readonly static ulong SessionidDefaultValue = 0UL;

        private ulong sessionid_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public ulong Sessionid {
          get { if ((_hasBits0 & 1) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
          set {
            _hasBits0 |= 1;
            sessionid_ = value;
          }
        }
        /// <summary>Gets whether the "sessionid" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSessionid {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "sessionid" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSessionid() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "include_auth_user_message" field.</summary>
        public const int IncludeAuthUserMessageFieldNumber = 3;
        private readonly static bool IncludeAuthUserMessageDefaultValue = false;

        private bool includeAuthUserMessage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool IncludeAuthUserMessage {
          get { if ((_hasBits0 & 2) != 0) { return includeAuthUserMessage_; } else { return IncludeAuthUserMessageDefaultValue; } }
          set {
            _hasBits0 |= 2;
            includeAuthUserMessage_ = value;
          }
        }
        /// <summary>Gets whether the "include_auth_user_message" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasIncludeAuthUserMessage {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "include_auth_user_message" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearIncludeAuthUserMessage() {
          _hasBits0 &= ~2;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as RequestedSession);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(RequestedSession other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Sessionid != other.Sessionid) return false;
          if (IncludeAuthUserMessage != other.IncludeAuthUserMessage) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (HasSessionid) hash ^= Sessionid.GetHashCode();
          if (HasIncludeAuthUserMessage) hash ^= IncludeAuthUserMessage.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (HasSessionid) {
            output.WriteRawTag(8);
            output.WriteUInt64(Sessionid);
          }
          if (HasIncludeAuthUserMessage) {
            output.WriteRawTag(24);
            output.WriteBool(IncludeAuthUserMessage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (HasSessionid) {
            output.WriteRawTag(8);
            output.WriteUInt64(Sessionid);
          }
          if (HasIncludeAuthUserMessage) {
            output.WriteRawTag(24);
            output.WriteBool(IncludeAuthUserMessage);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (HasSessionid) {
            size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
          }
          if (HasIncludeAuthUserMessage) {
            size += 1 + 1;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(RequestedSession other) {
          if (other == null) {
            return;
          }
          if (other.HasSessionid) {
            Sessionid = other.Sessionid;
          }
          if (other.HasIncludeAuthUserMessage) {
            IncludeAuthUserMessage = other.IncludeAuthUserMessage;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Sessionid = input.ReadUInt64();
                break;
              }
              case 24: {
                IncludeAuthUserMessage = input.ReadBool();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                Sessionid = input.ReadUInt64();
                break;
              }
              case 24: {
                IncludeAuthUserMessage = input.ReadBool();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  public sealed partial class CGameNotifications_GetSessionDetails_Response : pb::IMessage<CGameNotifications_GetSessionDetails_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_GetSessionDetails_Response> _parser = new pb::MessageParser<CGameNotifications_GetSessionDetails_Response>(() => new CGameNotifications_GetSessionDetails_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_GetSessionDetails_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_GetSessionDetails_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_GetSessionDetails_Response(CGameNotifications_GetSessionDetails_Response other) : this() {
      sessions_ = other.sessions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_GetSessionDetails_Response Clone() {
      return new CGameNotifications_GetSessionDetails_Response(this);
    }

    /// <summary>Field number for the "sessions" field.</summary>
    public const int SessionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.CGameNotifications_Session> _repeated_sessions_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.CGameNotifications_Session.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_Session> sessions_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_Session>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.CGameNotifications_Session> Sessions {
      get { return sessions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_GetSessionDetails_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_GetSessionDetails_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!sessions_.Equals(other.sessions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= sessions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      sessions_.WriteTo(output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      sessions_.WriteTo(ref output, _repeated_sessions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += sessions_.CalculateSize(_repeated_sessions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_GetSessionDetails_Response other) {
      if (other == null) {
        return;
      }
      sessions_.Add(other.sessions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(input, _repeated_sessions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            sessions_.AddEntriesFrom(ref input, _repeated_sessions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GameNotificationSettings : pb::IMessage<GameNotificationSettings>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GameNotificationSettings> _parser = new pb::MessageParser<GameNotificationSettings>(() => new GameNotificationSettings());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GameNotificationSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameNotificationSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameNotificationSettings(GameNotificationSettings other) : this() {
      _hasBits0 = other._hasBits0;
      appid_ = other.appid_;
      allowNotifications_ = other.allowNotifications_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GameNotificationSettings Clone() {
      return new GameNotificationSettings(this);
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 1;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 1) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "allow_notifications" field.</summary>
    public const int AllowNotificationsFieldNumber = 2;
    private readonly static bool AllowNotificationsDefaultValue = false;

    private bool allowNotifications_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool AllowNotifications {
      get { if ((_hasBits0 & 2) != 0) { return allowNotifications_; } else { return AllowNotificationsDefaultValue; } }
      set {
        _hasBits0 |= 2;
        allowNotifications_ = value;
      }
    }
    /// <summary>Gets whether the "allow_notifications" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAllowNotifications {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "allow_notifications" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAllowNotifications() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GameNotificationSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GameNotificationSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Appid != other.Appid) return false;
      if (AllowNotifications != other.AllowNotifications) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (HasAllowNotifications) hash ^= AllowNotifications.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasAllowNotifications) {
        output.WriteRawTag(16);
        output.WriteBool(AllowNotifications);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasAppid) {
        output.WriteRawTag(8);
        output.WriteUInt32(Appid);
      }
      if (HasAllowNotifications) {
        output.WriteRawTag(16);
        output.WriteBool(AllowNotifications);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (HasAllowNotifications) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GameNotificationSettings other) {
      if (other == null) {
        return;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.HasAllowNotifications) {
        AllowNotifications = other.AllowNotifications;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            AllowNotifications = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Appid = input.ReadUInt32();
            break;
          }
          case 16: {
            AllowNotifications = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_UpdateNotificationSettings_Request : pb::IMessage<CGameNotifications_UpdateNotificationSettings_Request>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Request> _parser = new pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Request>(() => new CGameNotifications_UpdateNotificationSettings_Request());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Request> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateNotificationSettings_Request() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateNotificationSettings_Request(CGameNotifications_UpdateNotificationSettings_Request other) : this() {
      gameNotificationSettings_ = other.gameNotificationSettings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateNotificationSettings_Request Clone() {
      return new CGameNotifications_UpdateNotificationSettings_Request(this);
    }

    /// <summary>Field number for the "game_notification_settings" field.</summary>
    public const int GameNotificationSettingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::OpenSteamworks.Protobuf.GameNotificationSettings> _repeated_gameNotificationSettings_codec
        = pb::FieldCodec.ForMessage(10, global::OpenSteamworks.Protobuf.GameNotificationSettings.Parser);
    private readonly pbc::RepeatedField<global::OpenSteamworks.Protobuf.GameNotificationSettings> gameNotificationSettings_ = new pbc::RepeatedField<global::OpenSteamworks.Protobuf.GameNotificationSettings>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::OpenSteamworks.Protobuf.GameNotificationSettings> GameNotificationSettings {
      get { return gameNotificationSettings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_UpdateNotificationSettings_Request);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_UpdateNotificationSettings_Request other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!gameNotificationSettings_.Equals(other.gameNotificationSettings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= gameNotificationSettings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      gameNotificationSettings_.WriteTo(output, _repeated_gameNotificationSettings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      gameNotificationSettings_.WriteTo(ref output, _repeated_gameNotificationSettings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += gameNotificationSettings_.CalculateSize(_repeated_gameNotificationSettings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_UpdateNotificationSettings_Request other) {
      if (other == null) {
        return;
      }
      gameNotificationSettings_.Add(other.gameNotificationSettings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            gameNotificationSettings_.AddEntriesFrom(input, _repeated_gameNotificationSettings_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            gameNotificationSettings_.AddEntriesFrom(ref input, _repeated_gameNotificationSettings_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_UpdateNotificationSettings_Response : pb::IMessage<CGameNotifications_UpdateNotificationSettings_Response>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Response> _parser = new pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Response>(() => new CGameNotifications_UpdateNotificationSettings_Response());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_UpdateNotificationSettings_Response> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateNotificationSettings_Response() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateNotificationSettings_Response(CGameNotifications_UpdateNotificationSettings_Response other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_UpdateNotificationSettings_Response Clone() {
      return new CGameNotifications_UpdateNotificationSettings_Response(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_UpdateNotificationSettings_Response);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_UpdateNotificationSettings_Response other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_UpdateNotificationSettings_Response other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_OnNotificationsRequested_Notification : pb::IMessage<CGameNotifications_OnNotificationsRequested_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_OnNotificationsRequested_Notification> _parser = new pb::MessageParser<CGameNotifications_OnNotificationsRequested_Notification>(() => new CGameNotifications_OnNotificationsRequested_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_OnNotificationsRequested_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_OnNotificationsRequested_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_OnNotificationsRequested_Notification(CGameNotifications_OnNotificationsRequested_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      appid_ = other.appid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_OnNotificationsRequested_Notification Clone() {
      return new CGameNotifications_OnNotificationsRequested_Notification(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 2;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 2) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~2;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_OnNotificationsRequested_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_OnNotificationsRequested_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Appid != other.Appid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasAppid) {
        output.WriteRawTag(16);
        output.WriteUInt32(Appid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_OnNotificationsRequested_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Appid = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class CGameNotifications_OnUserStatusChanged_Notification : pb::IMessage<CGameNotifications_OnUserStatusChanged_Notification>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CGameNotifications_OnUserStatusChanged_Notification> _parser = new pb::MessageParser<CGameNotifications_OnUserStatusChanged_Notification>(() => new CGameNotifications_OnUserStatusChanged_Notification());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CGameNotifications_OnUserStatusChanged_Notification> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::OpenSteamworks.Protobuf.SteammessagesGamenotificationsSteamclientReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_OnUserStatusChanged_Notification() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_OnUserStatusChanged_Notification(CGameNotifications_OnUserStatusChanged_Notification other) : this() {
      _hasBits0 = other._hasBits0;
      steamid_ = other.steamid_;
      sessionid_ = other.sessionid_;
      appid_ = other.appid_;
      status_ = other.status_ != null ? other.status_.Clone() : null;
      removed_ = other.removed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CGameNotifications_OnUserStatusChanged_Notification Clone() {
      return new CGameNotifications_OnUserStatusChanged_Notification(this);
    }

    /// <summary>Field number for the "steamid" field.</summary>
    public const int SteamidFieldNumber = 1;
    private readonly static ulong SteamidDefaultValue = 0UL;

    private ulong steamid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Steamid {
      get { if ((_hasBits0 & 1) != 0) { return steamid_; } else { return SteamidDefaultValue; } }
      set {
        _hasBits0 |= 1;
        steamid_ = value;
      }
    }
    /// <summary>Gets whether the "steamid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSteamid {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "steamid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSteamid() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "sessionid" field.</summary>
    public const int SessionidFieldNumber = 2;
    private readonly static ulong SessionidDefaultValue = 0UL;

    private ulong sessionid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong Sessionid {
      get { if ((_hasBits0 & 2) != 0) { return sessionid_; } else { return SessionidDefaultValue; } }
      set {
        _hasBits0 |= 2;
        sessionid_ = value;
      }
    }
    /// <summary>Gets whether the "sessionid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasSessionid {
      get { return (_hasBits0 & 2) != 0; }
    }
    /// <summary>Clears the value of the "sessionid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearSessionid() {
      _hasBits0 &= ~2;
    }

    /// <summary>Field number for the "appid" field.</summary>
    public const int AppidFieldNumber = 3;
    private readonly static uint AppidDefaultValue = 0;

    private uint appid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Appid {
      get { if ((_hasBits0 & 4) != 0) { return appid_; } else { return AppidDefaultValue; } }
      set {
        _hasBits0 |= 4;
        appid_ = value;
      }
    }
    /// <summary>Gets whether the "appid" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasAppid {
      get { return (_hasBits0 & 4) != 0; }
    }
    /// <summary>Clears the value of the "appid" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearAppid() {
      _hasBits0 &= ~4;
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus status_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "removed" field.</summary>
    public const int RemovedFieldNumber = 5;
    private readonly static bool RemovedDefaultValue = false;

    private bool removed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Removed {
      get { if ((_hasBits0 & 8) != 0) { return removed_; } else { return RemovedDefaultValue; } }
      set {
        _hasBits0 |= 8;
        removed_ = value;
      }
    }
    /// <summary>Gets whether the "removed" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasRemoved {
      get { return (_hasBits0 & 8) != 0; }
    }
    /// <summary>Clears the value of the "removed" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearRemoved() {
      _hasBits0 &= ~8;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CGameNotifications_OnUserStatusChanged_Notification);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CGameNotifications_OnUserStatusChanged_Notification other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Steamid != other.Steamid) return false;
      if (Sessionid != other.Sessionid) return false;
      if (Appid != other.Appid) return false;
      if (!object.Equals(Status, other.Status)) return false;
      if (Removed != other.Removed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasSteamid) hash ^= Steamid.GetHashCode();
      if (HasSessionid) hash ^= Sessionid.GetHashCode();
      if (HasAppid) hash ^= Appid.GetHashCode();
      if (status_ != null) hash ^= Status.GetHashCode();
      if (HasRemoved) hash ^= Removed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasSessionid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Sessionid);
      }
      if (HasAppid) {
        output.WriteRawTag(24);
        output.WriteUInt32(Appid);
      }
      if (status_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Status);
      }
      if (HasRemoved) {
        output.WriteRawTag(40);
        output.WriteBool(Removed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasSteamid) {
        output.WriteRawTag(9);
        output.WriteFixed64(Steamid);
      }
      if (HasSessionid) {
        output.WriteRawTag(16);
        output.WriteUInt64(Sessionid);
      }
      if (HasAppid) {
        output.WriteRawTag(24);
        output.WriteUInt32(Appid);
      }
      if (status_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Status);
      }
      if (HasRemoved) {
        output.WriteRawTag(40);
        output.WriteBool(Removed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasSteamid) {
        size += 1 + 8;
      }
      if (HasSessionid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Sessionid);
      }
      if (HasAppid) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Appid);
      }
      if (status_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Status);
      }
      if (HasRemoved) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CGameNotifications_OnUserStatusChanged_Notification other) {
      if (other == null) {
        return;
      }
      if (other.HasSteamid) {
        Steamid = other.Steamid;
      }
      if (other.HasSessionid) {
        Sessionid = other.Sessionid;
      }
      if (other.HasAppid) {
        Appid = other.Appid;
      }
      if (other.status_ != null) {
        if (status_ == null) {
          Status = new global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus();
        }
        Status.MergeFrom(other.Status);
      }
      if (other.HasRemoved) {
        Removed = other.Removed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Sessionid = input.ReadUInt64();
            break;
          }
          case 24: {
            Appid = input.ReadUInt32();
            break;
          }
          case 34: {
            if (status_ == null) {
              Status = new global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 40: {
            Removed = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Steamid = input.ReadFixed64();
            break;
          }
          case 16: {
            Sessionid = input.ReadUInt64();
            break;
          }
          case 24: {
            Appid = input.ReadUInt32();
            break;
          }
          case 34: {
            if (status_ == null) {
              Status = new global::OpenSteamworks.Protobuf.CGameNotifications_UserStatus();
            }
            input.ReadMessage(Status);
            break;
          }
          case 40: {
            Removed = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
